<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>  
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
          <a class="navbar-brand" href="#">Navbar</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">
              <a class="nav-link active" aria-current="page" href="/">Chat</a>
            </div>
          </div>
        </div>
      </nav>








    <h1>Socket.io Application</h1>
    <div class="usersettings">
        <h1>UserName</h1>
        <form id="userNameForm">
            <input id="userName" autocomplete="off" />
            <button>Set UserName</button>
        </form>
    </div>
    
    <form id="roomForm">
        <input id="roomName" autocomplete="off">
        <button>Create Room</button>
    </form>
    
    <h1>Chat</h1><hr><hr>
    
    <form id="messageRoom">
        <input id="messageRoomMessage" autocomplete="off" />
        <button>Send</button>
    </form>

    <ul id="messages">

    </ul>



    


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js"></script>
    <script>
        const socket = io();
        const mroom = document.getElementById('messageRoom');
        mroom.addEventListener('submit', (e) => {
            e.preventDefault();
            const input = document.getElementById('messageRoomMessage');
            const message = input.value.trim();
            if(message !== '') {
                socket.emit('messageRoom', {user: socket.username, message: message})
                input.value = '';
            }
        })

        socket.on('roomMessage', (data) => {
            const messages = document.getElementById('messages');
            const li = document.createElement('li');
            li.textContent = `${data.user}: ${data.message}`;
            messages.appendChild(li);
        })



        let usernameform = document.querySelector('#userNameForm');
        usernameform.addEventListener('submit', (event) => {
            event.preventDefault();
            const inputname = document.querySelector("#userName");
            const userName = inputname.value.trim();
            if(userName !== '') {
                socket.emit('username', userName);
                inputname.value = '';
            }
        })


        document.getElementById("roomForm").addEventListener('submit', (e) => {
            e.preventDefault();
            const input = document.getElementById("roomName");
            const roomName = input.value.trim();
            if(roomName !== '') {
                socket.emit('createRoom', {user: socket.username, room: roomName})
                input.value = '';
            }
        });

        socket.on('roomCreated', (data) => {
            const messages = document.getElementById('messages');
            const li = document.createElement('li');
            li.textContent = `${data.user}: created and joined ${data.room}`;
            messages.appendChild(li);
        });



    </script>


</body>
</html>